function stamam = matCS_step_standard_amount (step,item);

% function stamam = matCS_step_standard_amount (step,item);
%
% Return the standard amounts of item in step, if the step is of type C, F or B. The result takes into account the pipette/bottle dilution as well as the manual_dilution factor. For steps of type "B" (blanks), stamam = 0 is returned. If the step type is not C, F or B, a warning will be issued and the result will be NaN. If the step contains no standard amount for the given item, return NaN.
%
% INPUT:
% step: step struct (see matCS_read_step), or a vector where each element corresponds to one step.
%
% OUTPUT:
% stamam: standard amount

if ( length(step) > 1 )
    stamam = [];
    for i = 1:length(step)
        stamam = [stamam ; matCS_step_standard_amount(step(i),item) ];
    end
else
    stamam = NaN;
    if ~( strcmp(step.type,"F") || strcmp(step.type,"C")  || strcmp(step.type,"B") )
        warning (sprintf("matCS_step_standard_amounts: step type is not C, F or B (%s).",matCS_step_identity(step)));
    else
	if strcmp(step.type,"B")
		stamam = 0;
	else
		if isempty (step.standard)
			warning (sprintf("matCS_step_standard_amounts: step contains no standard amounts (%s).",matCS_step_identity(step)));
		else
			items = fieldnames (step.standard);

			% fix / parse "wrong" item names in standard amounts:
			if ~isempty(j = strmatch("O32",items))
				items{j} = "O2";
				step.standard.O16 = step.standard.O32;
				warning (sprintf("matCS_step_standard_amount: wrong item name (O32) in standard amounts found, assuming O16 instead (step: %s).",matCS_step_identity(step)));
			end
			if ~isempty(j = strmatch("O16",items))
				items{j} = "O2";
				step.standard.O16 = step.standard.O2;
				warning (sprintf("matCS_step_standard_amount: wrong item name (O16) in standard amounts found, assuming O2 instead (step: %s).",matCS_step_identity(step)));
			end
			if ~isempty(j = strmatch("N28",items))
				items{j} = "N2";
				step.standard.N14 = step.standard.N28;
				warning (sprintf("matCS_step_standard_amount: wrong item name (N28) in standard amounts found, assuming N14 instead (step: %s).",matCS_step_identity(step)));
			end
			if ~isempty(j = strmatch("N14",items))
				items{j} = "N2";
				step.standard.N14 = step.standard.N2;
				warning (sprintf("matCS_step_standard_amount: wrong item name (N14) in standard amounts found, assuming N2 instead (step: %s).",matCS_step_identity(step)));
			end
			if ~isempty(j = strmatch("SF66",items))
				items{j} = "SF6";
				step.standard.SF6 = step.standard.SF66;
				warning (sprintf("matCS_step_standard_amount: wrong item name (SF66) in standard amounts found, assuming SF6 instead (step: %s).",matCS_step_identity(step)));
			end
			u = item;
			while isempty(str2num(u(end))) % remove non-numeric letters (detecor information) from end of item name to get isotope / element / molecule name
				if length(u) > 1
					u = u(1:end-1);
				else
					u = "";
				end
			end

			if length(u) > 1
				item = u;
			else
				error (sprintf("matCS_step_standard_amount: cannot parse item name %s to a meaningful isotope / element / molecule name.",item))
			end

			if strmatch (item,{"CFC11" "CFC12" "CFC113"})
    				warning ("matCS_step_standard_amount: standard amounts of CFCs in B104 and B105 may need some tweaking as they don't agree nicely in the calibration curves!!! Check this!!!")
			end

			i = find(strcmp(upper(items),upper(item)));
			if isempty(i)
				warning (sprintf("matCS_step_standard_amounts: step contains no standard amount for item %s (%s)",item,matCS_step_identity(step)));

				if strcmp(upper(item),"O2")
					if strmatch (step.bottle,{"B104" "104"})
						warning ("matCS_step_standard_amount: faking O2 standard amounts for B104!");
						stamam = 3.45;
						stamam = stamam * matCS_step_dilution (step);
					end
				end
				
				if strcmp(upper(item),"N2")
					if strmatch (step.bottle,{"B104" "104"})
						warning ("matCS_step_standard_amount: faking N2 standard amounts for B104!");
						stamam = 8.22; % determined by comparison with N2M data from B105 (run MB13)
						stamam = stamam * matCS_step_dilution (step);
					end
				end


			else % standard amount is available
				stamam = getfield (step.standard,items{i});
				stamam = stamam * matCS_step_dilution (step);


				if strmatch (step.bottle,{"B104" "104"})
					if strmatch (item,{"HE4" "NE20" "NE22"})
	    					warning ("matCS_step_standard_amount: tweaking He4, Ne20 or Ne22 standard amount of B104!!! Check this!!!")
		            	stamam = stamam / 0.807; % determined in run MB13 by comparing data from B104 and B105 using HE4F, NE20F (RGA100) and NE20M and NE22M (ANTRAWAGC) 
					end
					if strmatch (item,{"AR40" "AR36"})
	    					warning ("matCS_step_standard_amount: tweaking Ar40 or Ar36 standard amount of B104!!! Check this!!!")
		            	stamam = stamam / 0.735; % determined in run MB13 by comparing data from B104 and B105 using AR40M (ANTRAWAGC) 
					end
					if strmatch (item,{"KR84" "KR86"})
	    					warning ("matCS_step_standard_amount: tweaking Kr84 or Kr86 standard amount of B104!!! Check this!!!")
		        		stamam = stamam / 0.92; % determined in run MB13 by comparing data from B104 and B105 using KR84M and KR86M (ANTRAWAGC) 
					end
				end % BOTTLE B104


				if strmatch (step.bottle,{"B105" "105"})
					if strmatch (item,{"CFC11"})
	    					warning ("matCS_step_standard_amount: tweaking CFC-11 standard amount of B105!!! Check this!!!")
		            	stamam = stamam * 0.79; % determined in run MB13 by comparing data from B104 and B105 using CFC11E (ANTRAWAGC) 
					end
					if strmatch (item,{"SF6"})
	    					warning ("matCS_step_standard_amount: tweaking SF6 standard amount of B105!!! Check this!!!")
		            	% stamam = stamam * 0.6; % determined in run MB13 by comparing data from B104 and B105 using SF6E (ANTRAWAGC
	    					warning ("matCS_step_standard_amount: SF6 standard amount of B105 is unknown!!!")
	    					stamam = NaN;
					end
				end % BOTTLE B105

			end
		end
	end
end

% APPLY FUDGE FACTORS TO FIX NOBLE GAS ELEMENTAL RATIOS:				
if strmatch (item,{"HE4"})
        warning ("matCS_step_standard_amount: multiplying He standard amount with fudge factor... Check this!!!")
        stamam = stamam * 1.198 ;
end
if strmatch (item,{"NE20" "NE22"})
        warning ("matCS_step_standard_amount: multiplying Ne standard amount with fudge factor... Check this!!!")
        stamam = stamam * 1.484 / 1.7;
end
if strmatch (item,{"AR40" "AR36"})
        warning ("matCS_step_standard_amount: multiplying Ar standard amount with fudge factor... Check this!!!")
        stamam = stamam / 1.3;
end
if strmatch (item,{"KR84" "KR86"})
        warning ("matCS_step_standard_amount: multiplying Kr standard amount with fudge factor... Check this!!!")
        stamam = stamam * 1.06;
end
if strmatch (item,{"XE129" "XE131" "XE132"})
        warning ("matCS_step_standard_amount: multiplying Xe standard amount with fudge factor... Check this!!!")
        stamam = stamam * 0.868 / 0.756 / 0.997;
end
if strmatch (item,{"N2" "N14" "N28"})
        warning ("matCS_step_standard_amount: multiplying N2 standard amount with fudge factor... Check this!!!")
        stamam = stamam * 1.218;
end
if strmatch (item,{"O2" "O16" "O32"})
        warning ("matCS_step_standard_amount: multiplying O2 standard amount with fudge factor... Check this!!!")
        stamam = stamam * 1.127;
end
if strmatch (item,{"SF6"})
        warning ("matCS_step_standard_amount: multiplying SF6 standard amount with fudge factor... Check this!!!")
        stamam = stamam * 2.55 / 1.6 / 1.1;
end

warning ("matCS_step_standard_amount: check CFC-x / noble-gas ratios!!!")
warning ("matCS_step_standard_amount: check absolute gas amounts!!!")



end
